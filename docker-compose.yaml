## Service Definitions
services:

  ## Klippy Services
  ##
  klipper:
    image: mkuf/klipper:latest
    restart: unless-stopped
    privileged: true
    logging:
      driver: none
    depends_on:
      init:
        condition: service_completed_successfully
    command: >
      -I printer_data/run/klipper.tty
      -a printer_data/run/klipper.sock
      printer_data/config/printer.cfg
      -l printer_data/logs/klippy.log
    volumes:
      - /dev:/dev
      - ./printer.cfg:/opt/printer_data/config/printer.cfg
      - run:/opt/printer_data/run
      - gcode:/opt/printer_data/gcodes
      - log:/opt/printer_data/logs
    labels:
      org.prind.service: klipper

  ## Frontends
  ##
  octoprint:
    image: octoprint/octoprint:minimal
    restart: unless-stopped
    depends_on:
      klipper:
        condition: service_started
    privileged: true
    volumes:
      - /dev:/dev
      - run:/opt/printer_data/run
      - octoprint:/octoprint
      - ./octoprint.yaml:/octoprint/octoprint/config.yaml
    profiles:
      - octoprint
    labels:
      org.prind.service: octoprint
      traefik.enable: true
      traefik.http.services.octoprint.loadbalancer.server.port: 5000
      traefik.http.routers.octoprint.rule: PathPrefix(`/`)
      traefik.http.routers.octoprint.entrypoints: web


  ## Accompanying Services/Infra
  ##

  ## Config dir needs to be writable by uid/gid 1000
  ## This container sets the right permissions and exits
  # init:
  #   image: busybox:latest
  #   command: mkdir -p /prind/config && chown -R 1000:1000 /prind/config
  #   volumes:
  #     - .:/prind
  #   labels:
  #     org.prind.service: init

  ## Loadbalancer/Proxy
  traefik:
    image: traefik:3.5
    command:
      - "--accesslog"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      org.prind.service: traefik

volumes:
  run:
    driver_opts:
      type: tmpfs
      device: tmpfs
  gcode:
  octoprint:
  log:
    driver_opts:
      type: tmpfs
      device: tmpfs
